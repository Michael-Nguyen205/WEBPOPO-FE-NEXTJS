// export const metadata = {
//   title: 'Next.js',
//   description: 'Generated by Next.js',
// }


// import {useTranslations} from 'next-intl';

// export default function RootLayout({
//   children,
// }: {
//   children: React.ReactNode
// }) {

//   const t = useTranslations('LoginPage');
//   return (
 
//     <body>
//         <div>
//       this is layout {t('title')}
//     </div>
//     <div>
//       {children}
//     </div>
//     </body>
//   )
// }







// app/auth/layout.tsx
// "use client"
 import {useTranslations} from 'next-intl';
import { Metadata } from "next";
import "../../globals.css"; // Import CSS cho phần authentication

// export const metadata: Metadata = {
//   title: "Authentication - My App",
//   description: "Authentication pages for the app",
// };

export default function AuthLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const t = useTranslations('LoginPage');
  return (
    <html lang="en">
      <head></head>
      <body>
        <div className="auth-layout">
           this is layout 
           {t('title')}
           </div>
          {/* Phần này chỉ có layout riêng cho trang xác thực */}
          {children} {/* Trang con như login hoặc register sẽ render ở đây */}
 
      </body>
    </html>
  );
}


// import type { Metadata } from "next";
// import localFont from "next/font/local";
// import "../../globals.css"; // Đảm bảo import file css global

// import { getRequestConfig, NextIntlClientProvider } from "next-intl";
// import "animate.css";
// import { routing } from "@/i18n/routing";

// // Font configuration
// const mylocalfont = localFont({
//   src: "../../../../public/fonts/Mulish/Mulish-Italic-VariableFont_wght.ttf",
//   display: "swap",
//   weight: "400",
// });

// // Metadata definition cho layout authentication
// export const metadata: Metadata = {
//   title: "Authentication - Next.js",
//   description: "Login and Register pages for the app",
// };

// // Generate static params function
// export function generateStaticParams() {
//   return routing.locales.map((locale) => ({ locale }));
// }

// // RootLayout component nhận categories từ props
// export default async function RootLayout({
//   children,
//   params: { locale },
// }: Readonly<{
//   children: React.ReactNode;
//   params: { locale: string };
// }>) {
//   // Sử dụng getRequestConfig để lấy messages cho locale
//   const { messages } = await getRequestConfig({ locale });

//   return (
//     <html lang={locale}>
//       <body className={`${mylocalfont.className}`}>
//         <div className="px-4 py-1 md:px-10 sm:px-7 text-black">
//           <NextIntlClientProvider messages={messages}>
//             {/* Chỉ hiển thị nội dung của phần authentication */}
//             {children}
//           </NextIntlClientProvider>
//         </div>
//       </body>
//     </html>
//   );
// }
